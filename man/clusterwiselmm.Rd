% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clusterwiselmm.R
\name{clusterwiselmm}
\alias{clusterwiselmm}
\title{Geometrical clusterwise method for linear multi level models}
\usage{
clusterwiselmm(
  data,
  target,
  K,
  formula,
  nb_trials = 50,
  nb_iterations = 100,
  batch = TRUE,
  verbose = TRUE,
  initialization = NULL
)
}
\arguments{
\item{data}{data frame containing the variables named in \code{formula}.}

\item{target}{vector containing the target variable.}

\item{K}{number of clusters.}

\item{formula}{formula a two sided linear formula object corresponding to \code{formula} parameter
in \code{lmer} from \pkg{lme4} package.}

\item{nb_trials}{number of trials.}

\item{nb_iterations}{maximum number of iterations.}

\item{batch}{factor; if TRUE, runs a batch approach, otherwise runs a sequential one.}

\item{verbose}{factor; if TRUE, prints the final cost at each trial.}

\item{initialization}{if vector of the same length of data, use this vector as clustering initialization.
Otherwise, do a random initialization.}
}
\value{
list containing models as a class of clmm, the final clustering and the final cost.
}
\description{
This function fits a clusterwise multi level model with k clusters to a given data frame
using a geometrical approach. It runs the optimizer for many trials to get rid of the initialization
bias and reach a global minima. You can choose between a batch or sequential approach and also fix the
initial clustering.
}
\examples{
require(stats)
## define correlation matrices for random effects slopes and intercepts
lvl2_corr_mat = matrix(c(1, 0,
                         0, 1), 2, 2)
lvl3_corr_mat = matrix(c(10, 0,
                         0, 10), 2, 2)

## generate 3 levels data with 3 groups that contains each 10 subgroups,
## and each subgroup contains 30 individuals
data = simulate_data(n1 = 30,
                     n2 = 10,
                     n3 = 3,
                     fixed_slope = -2,
                     fixed_intercept = 2,
                     lvl2_corr_mat = lvl2_corr_mat,
                     lvl3_corr_mat = lvl3_corr_mat,
                     sigma2 = 1
                     )
## fit a clusterwise lmm with 3 classes that tries to find level 3 clustering.

}
